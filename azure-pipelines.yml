trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

- script: |
    npm pack
  displayName: 'Package for npm release'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '*.tgz' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy npm package'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'package.json' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy package.json'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
    artifactName: npm
  displayName: 'Publish npm artifact'
- task: Bash@3
  displayName: 'Linux Agent folder structure'
  condition: eq('${Agent.OS}}', Linux)
  inputs:
    targetType: 'inline'
    script: |
      echo '######### pwd ######### '
      pwd
      echo '######### ls $(Pipeline.Workspace) ######### '
      ls $(Pipeline.Workspace)
      echo '######### ls $(Pipeline.Workspace)/s ######### '
      ls $(Pipeline.Workspace)/s
      echo '######### ls $(Pipeline.Workspace)/b ######### '
      ls $(Pipeline.Workspace)/b
      echo '######### ls $(Pipeline.Workspace)/TestResults ######### '
      ls $(Pipeline.Workspace)/TestResults
      echo '######### ls $(Pipeline.Workspace)/a ######### '
      ls $(Pipeline.Workspace)/a
      
- task: PowerShell@2
  displayName: 'Windows Agent folder structure'
  condition: eq('${Agent.OS}}', Windows_NT)
  inputs:
    targetType: 'inline'
    script: |
      echo '######### pwd ######### '
      pwd
      echo $env:AGENT_OS
      echo ${Agent.OS}
    